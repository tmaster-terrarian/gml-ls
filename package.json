{
	"name": "gml-ls",
	"description": "A language provider for GameMaker Studio 2 (LTS and above)",
	"publisher": "bscit",
	"author": {
		"name": "bscit",
		"url": "https://bscit.dev"
	},
	"icon": "icon.png",
	"license": "MIT",
	"version": "1.0.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/tmaster-terrarian/gml-ls"
	},
	"categories": ["Programming Languages", "Snippets"],
	"keywords": ["gml", "gamemaker"],
	"engines": {
		"vscode": "^1.75.0"
	},
	"workspaceTrust": {
		"request": "never"
	},
	"activationEvents": [],
	"main": "./client/out/extension",
	"contributes": {
		"breakpoints": [
			{
				"language": "gml"
			}
		],
		"configuration": {
			"type": "object",
			"title": "GML",
			"properties": {
				"gml-ls.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"markdownDescription": "Traces the communication between VS Code and the language server."
				},
				"gml-ls.simpleMode": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"markdownDescription": "Disables all language features besides Syntax Highlighting"
				},
				"gml-ls.userGlobals": {
					"scope": "window",
					"type": "object",
					"properties": {
						"functions": {
							"type": "object",
							"propertyNames": {
								"pattern": "\\S+",
								"patternErrorMessage": "Property should not be empty."
							},
							"additionalProperties": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string",
										"description": "Provide a Markdown description string that will appear in hovers and completions"
									},
									"documentationLink": {
										"type": "string",
										"description": "Provide a link to code documention at the bottom of the description"
									},
									"signature": {
										"type": "string",
										"description": "The signature is inserted next to the name of the function. Gets overriden by the parameters, if present."
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"label": {
													"type": "string",
													"description": "Parameter name"
												},
												"type": {
													"type": "string",
													"oneOf": [
														{
															"enum": [
																"number",
																"integer",
																"boolean",
																"string",
																"struct"
															]
														},
														{
															"type": "string"
														}
													]
												},
												"documentation": {
													"type": "string",
													"description": "Parameter documentation Markdown text that shows up in the function's help signature when typing"
												}
											},
											"required": [
												"label"
											]
										}
									},
									"returns": {
										"type": "string",
										"oneOf": [
											{
												"enum": [
													"number",
													"integer",
													"boolean",
													"string",
													"struct",
													null
												]
											},
											{
												"type": "string"
											}
										],
										"default": null
									},
									"detail": {
										"type": "string",
										"description": "Overrides the detail in completions generated by the parameters"
									},
									"deprecated": {
										"type": "boolean",
										"default": true,
										"description": "Function will be marked as deprecated"
									}
								},
								"additionalProperties": false,
								"required": []
							},
							"description": "List of user-defined Script Functions"
						},
						"macros": {
							"type": "object",
							"propertyNames": {
								"pattern": "\\S+",
								"patternErrorMessage": "Property should not be empty."
							},
							"additionalProperties": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string",
										"description": "Provide a Markdown description string that will appear in hovers and completions"
									},
									"documentationLink": {
										"type": "string",
										"description": "Provide a link to code documention at the bottom of the description"
									},
									"signature": {
										"type": "string",
										"description": "The signature is inserted next to the name of the constant"
									},
									"detail": {
										"type": "string",
										"description": "Overrides the detail in completions"
									},
									"deprecated": {
										"type": "boolean",
										"default": true,
										"description": "Constant will be marked as deprecated"
									}
								},
								"additionalProperties": false,
								"required": []
							},
							"description": "List of user-defined Macros"
						}
					},
					"default": {
						"functions": {},
						"macros": {}
					},
					"required": [
						"functions",
						"macros"
					],
					"markdownDescription": "Object containing any number of user-defined Script Functions and Macros, allowing one to add descriptions and documentation"
				},
				"gml-ls.enableColors": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show `Color` information next to constants"
				},
				"gml-ls.workspaceColors": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Colors` to also be shown on workspace constants"
				},
				"gml-ls.enableCompletions": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Completions` for built-in variables"
				},
				"gml-ls.workspaceCompletions": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Completions` to include workspace constants"
				},
				"gml-ls.resourceCompletions": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Completions` to include project resources"
				},
				"gml-ls.semanticTokens.enabled": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Semantic Token Colorization` for workspace constants\n\nRequires `editor.semanticHighlighting.enabled` to be set to `true`"
				},
				"gml-ls.semanticTokens.instanceVariables": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Semantic Token Colorization` for built-in instance variables\n\nRequires `editor.semanticHighlighting.enabled` to be set to `true`"
				},
				"gml-ls.semanticTokens.resources": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Semantic Token Colorization` for project resources (objects, sprites, etc)\n\nRequires `editor.semanticHighlighting.enabled` to be set to `true`"
				},
				"gml-ls.enableHovers": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Hovers` for built-in variables and constants"
				},
				"gml-ls.workspaceHovers": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Hovers` to include workspace symbols outside of the current file"
				},
				"gml-ls.resourceHovers": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Hovers` to include project resources"
				},
				"gml-ls.enableReferences": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Show References` for built-in variables"
				},
				"gml-ls.workspaceReferences": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Show References` to include workspace constants"
				},
				"gml-ls.resourceReferences": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Allow `Show References` to include project resources"
				},
				"gml-ls.workspaceGotoDefinition": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Show Definition` for workspace constants"
				},
				"gml-ls.renameSymbol": {
					"scope": "window",
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable `Rename Symbol` for workspace constants"
				}
			}
		},
		"languages": [
			{
				"id": "gml",
				"aliases": [
					"GameMaker Language",
					"gml"
				],
				"extensions": [
					".gml"
				],
				"configuration": "./languages/gml-configuration.json",
				"icon": {
					"dark": "./assets/gml-icon-dark.png",
					"light": "./assets/gml-icon-light.png"
				}
			}
		],
		"configurationDefaults": {
			"editor.semanticTokenColorCustomizations": {
				"enabled": true,
				"rules": {
					"*.deprecated": {
						"strikethrough": true
					},
					"*.builtinLocal": "#04de80",
					"*.resource": "#fab1e7"
				}
			},
			"files.associations": {
				"*.yy": "json",
				"*.yyp": "json"
			}
		},
		"grammars": [
			{
				"language": "gml",
				"scopeName": "source.gml",
				"path": "./languages/gml-grammar.json"
			}
		],
		"snippets": [
			{
				"language": "gml",
				"path": "./snippets/gml-snippets.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"lint": "eslint ./lib/src ./client/src ./server/src --ext .ts,.tsx",
		"postinstall": "cd ./lib && npm install && cd ../client && npm install && cd ../server && npm install && cd .."
	},
	"devDependencies": {
		"@types/mocha": "^10.0.6",
		"@types/node": "^18.14.6",
		"@typescript-eslint/eslint-plugin": "^7.1.0",
		"@typescript-eslint/parser": "^7.1.0",
		"eslint": "^8.57.0",
		"mocha": "^10.3.0",
		"typescript": "^5.3.3"
	}
}
